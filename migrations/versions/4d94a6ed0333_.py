"""empty message

Revision ID: 4d94a6ed0333
Revises: 4a0b77571480
Create Date: 2014-08-27 17:10:23.243168

"""

# revision identifiers, used by Alembic.
revision = '4d94a6ed0333'
down_revision = '4a0b77571480'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('roles_users')
    op.drop_table('role')
    op.add_column('users', sa.Column('_password', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('authenticated', sa.Boolean(), nullable=True))
    op.drop_column('users', 'active')
    op.drop_column('users', 'confirmed_at')
    op.drop_column('users', 'password')
    op.drop_column('users', 'id')
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_index('users_email_key', 'users', ['email'], unique=True)
    op.create_unique_constraint(u'users_email_key', 'users', ['email'])
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.add_column('users', sa.Column('id', sa.INTEGER(), server_default="nextval('users_id_seq'::regclass)", nullable=False))
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('confirmed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_column('users', 'authenticated')
    op.drop_column('users', '_password')
    op.create_table('role',
    sa.Column('id', sa.INTEGER(), server_default="nextval('role_id_seq'::regclass)", nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'role_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('roles_users',
    sa.Column('users_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['role_id'], [u'role.id'], name=u'roles_users_role_id_fkey'),
    sa.ForeignKeyConstraint(['users_id'], [u'users.id'], name=u'roles_users_users_id_fkey')
    )
    ### end Alembic commands ###
